{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Ds9Display Class azcam_ds9.ds9display.Ds9Display Azcam's interface to SAO's ds9 image display tool. __init__ ( self , obj_id = 'display' , name = 'ds9' ) special delete_all_rois ( self ) Delete all ROIs. :return None: display ( self , image , extension_number =- 1 ) Display a file in ds9, making a copy so locking does not occur. If specified for an MEF file, only extension_number is displayed. :param image: a filename or an image object :param int extension_number: FITS extension number of image, -1 for all :return None: draw_box ( self , xy , size = [ 51 , 51 ], angle = 0 ) Draw a box on the display. :param list xy: [x,y] coords of box to be drawn in image coordinates :param list size: [xwidth,ywidth] of box :param float angle: Angle of box. :return None: exam ( self , box_size = 20 , loop = 1 ) Interactive: Get info around blinking cursor position. print() is allowed here as interactive only. :param int box_size: Size of examine box :param bool Loop: True for keep looping until q pressed :return list: [KeyPressed,X,Y] or [] in case or error. KeyPressed is a character. find_displays ( self ) Returns a list of ds9 servers. The returned list is like: ['a00009c:50064', 'a00009c:59734'], which is host:port. If not servers are found, the returned list is empty. :return list: Display info from XPA get_box ( self ) Get position of the first box in image coords. :return None: get_data ( self , roi_number = 0 ) Returns [Status,[pixel1,pixel2,...]] in display ROI. :param int roi_number: Number of ROI to get data :return list: [status,[pixel1,pixel2,...]] for ROI get_last_point ( self , coordinate_mode = 'physical' ) Returns coordinates of the last point selected. :param str coordinate_mode: Coorinate mode, wcs or pysical :return list: Coords of point as [x,y] or [] if none get_number_rois ( self ) Returns the number of defined ROI's. :return int: Number of ROI's specified by ds9 get_regions ( self , coordinate_type = 'image' ) Returns a list of regions, each a list of [shape,coords...]. :param str coordinate_type: Type of coords as defined by the display server ['image','detector', 'amplifier'] :param list: List of ROI info in ds9 format get_roi_string ( self , roi_number = 0 , coordinate_type = '' ) Get an ROI descriptor formatted as a string with integer values. :param int roi_number: roi_number to return :param str coordinate_type: :return list: List of ROIs get_rois ( self , roi_number =- 1 , coordinate_type = 'default' ) Returns the Region Of Interest from the display tool and sets the internal ROI descriptors to the values read. If roi_number is not specified then a list of all defined ROI's is returned. :param int roi_number: roi number to be returned :param str CoorinateType: Type of coords as defined by the display server ['image','detector', 'amplifier'] :return list: The list of ROIs get_stats ( self , roi_number =- 1 ) Returns statistics [status,mean,sdev] of an ROI Also sets display.mean and display.sdev global variables. :param int roi_number: Number of ROI to get status :return list: [status,mean,sdev] for ROI initialize ( self ) Initialize Ds9. :return None: read_rois ( self ) Read and internally save image, detector, and amplifier all Rois. :return None: save_fits ( self , filename = 'display.fits' ) Save displayed image as a FITS file. :param str filename: filename of image to be saved. :return None: save_image ( self , filename = 'display.png' ) Save displayed image as a PNG snapshot. :param str filename: filename of image to be saved. :return None: set_cursor_mode ( self , mode = 'point' , clear_rois = 0 ) Set the display cursor mode. :param str mode: Cursor mode (\"point\", \"crosshair\") :param bool clear_rois: True to clear all ROIs set_display ( self , display_number =- 1 ) Set the current ds9 display by number. :param int display_number: Number for display to be used (0->N) :return None: show_stats ( self , roi_number = 0 ) Interactive: Print stats from an ROI in a real-time loop until q is pressed. print() is allowed here as interactive only. :param int roi_number: Number of ROI to get status :return list: [status,mean,sdev] for ROI start ( self , flag = 0 ) Starts a display process. xpaget ( self , command ) Issue xpaget command for ds9. Returns data as a list of space deliminated items. :param str command: command string for xpaget command :return: Return value xpaset ( self , command ) Issue xpaset command for ds9. :param str command: command string for xpaset command :return: Return value zoom ( self , scale = 0 ) Set display zoom factor relative to current zoom. :param int Scale: Scale factor for zoom, 0 \"to fit\" :return None:","title":"Ds9Display Class"},{"location":"#ds9display-class","text":"","title":"Ds9Display Class"},{"location":"#azcam_ds9.ds9display.Ds9Display","text":"Azcam's interface to SAO's ds9 image display tool.","title":"Ds9Display"},{"location":"#azcam_ds9.ds9display.Ds9Display.__init__","text":"","title":"__init__()"},{"location":"#azcam_ds9.ds9display.Ds9Display.delete_all_rois","text":"Delete all ROIs. :return None:","title":"delete_all_rois()"},{"location":"#azcam_ds9.ds9display.Ds9Display.display","text":"Display a file in ds9, making a copy so locking does not occur. If specified for an MEF file, only extension_number is displayed. :param image: a filename or an image object :param int extension_number: FITS extension number of image, -1 for all :return None:","title":"display()"},{"location":"#azcam_ds9.ds9display.Ds9Display.draw_box","text":"Draw a box on the display. :param list xy: [x,y] coords of box to be drawn in image coordinates :param list size: [xwidth,ywidth] of box :param float angle: Angle of box. :return None:","title":"draw_box()"},{"location":"#azcam_ds9.ds9display.Ds9Display.exam","text":"Interactive: Get info around blinking cursor position. print() is allowed here as interactive only. :param int box_size: Size of examine box :param bool Loop: True for keep looping until q pressed :return list: [KeyPressed,X,Y] or [] in case or error. KeyPressed is a character.","title":"exam()"},{"location":"#azcam_ds9.ds9display.Ds9Display.find_displays","text":"Returns a list of ds9 servers. The returned list is like: ['a00009c:50064', 'a00009c:59734'], which is host:port. If not servers are found, the returned list is empty. :return list: Display info from XPA","title":"find_displays()"},{"location":"#azcam_ds9.ds9display.Ds9Display.get_box","text":"Get position of the first box in image coords. :return None:","title":"get_box()"},{"location":"#azcam_ds9.ds9display.Ds9Display.get_data","text":"Returns [Status,[pixel1,pixel2,...]] in display ROI. :param int roi_number: Number of ROI to get data :return list: [status,[pixel1,pixel2,...]] for ROI","title":"get_data()"},{"location":"#azcam_ds9.ds9display.Ds9Display.get_last_point","text":"Returns coordinates of the last point selected. :param str coordinate_mode: Coorinate mode, wcs or pysical :return list: Coords of point as [x,y] or [] if none","title":"get_last_point()"},{"location":"#azcam_ds9.ds9display.Ds9Display.get_number_rois","text":"Returns the number of defined ROI's. :return int: Number of ROI's specified by ds9","title":"get_number_rois()"},{"location":"#azcam_ds9.ds9display.Ds9Display.get_regions","text":"Returns a list of regions, each a list of [shape,coords...]. :param str coordinate_type: Type of coords as defined by the display server ['image','detector', 'amplifier'] :param list: List of ROI info in ds9 format","title":"get_regions()"},{"location":"#azcam_ds9.ds9display.Ds9Display.get_roi_string","text":"Get an ROI descriptor formatted as a string with integer values. :param int roi_number: roi_number to return :param str coordinate_type: :return list: List of ROIs","title":"get_roi_string()"},{"location":"#azcam_ds9.ds9display.Ds9Display.get_rois","text":"Returns the Region Of Interest from the display tool and sets the internal ROI descriptors to the values read. If roi_number is not specified then a list of all defined ROI's is returned. :param int roi_number: roi number to be returned :param str CoorinateType: Type of coords as defined by the display server ['image','detector', 'amplifier'] :return list: The list of ROIs","title":"get_rois()"},{"location":"#azcam_ds9.ds9display.Ds9Display.get_stats","text":"Returns statistics [status,mean,sdev] of an ROI Also sets display.mean and display.sdev global variables. :param int roi_number: Number of ROI to get status :return list: [status,mean,sdev] for ROI","title":"get_stats()"},{"location":"#azcam_ds9.ds9display.Ds9Display.initialize","text":"Initialize Ds9. :return None:","title":"initialize()"},{"location":"#azcam_ds9.ds9display.Ds9Display.read_rois","text":"Read and internally save image, detector, and amplifier all Rois. :return None:","title":"read_rois()"},{"location":"#azcam_ds9.ds9display.Ds9Display.save_fits","text":"Save displayed image as a FITS file. :param str filename: filename of image to be saved. :return None:","title":"save_fits()"},{"location":"#azcam_ds9.ds9display.Ds9Display.save_image","text":"Save displayed image as a PNG snapshot. :param str filename: filename of image to be saved. :return None:","title":"save_image()"},{"location":"#azcam_ds9.ds9display.Ds9Display.set_cursor_mode","text":"Set the display cursor mode. :param str mode: Cursor mode (\"point\", \"crosshair\") :param bool clear_rois: True to clear all ROIs","title":"set_cursor_mode()"},{"location":"#azcam_ds9.ds9display.Ds9Display.set_display","text":"Set the current ds9 display by number. :param int display_number: Number for display to be used (0->N) :return None:","title":"set_display()"},{"location":"#azcam_ds9.ds9display.Ds9Display.show_stats","text":"Interactive: Print stats from an ROI in a real-time loop until q is pressed. print() is allowed here as interactive only. :param int roi_number: Number of ROI to get status :return list: [status,mean,sdev] for ROI","title":"show_stats()"},{"location":"#azcam_ds9.ds9display.Ds9Display.start","text":"Starts a display process.","title":"start()"},{"location":"#azcam_ds9.ds9display.Ds9Display.xpaget","text":"Issue xpaget command for ds9. Returns data as a list of space deliminated items. :param str command: command string for xpaget command :return: Return value","title":"xpaget()"},{"location":"#azcam_ds9.ds9display.Ds9Display.xpaset","text":"Issue xpaset command for ds9. :param str command: command string for xpaset command :return: Return value","title":"xpaset()"},{"location":"#azcam_ds9.ds9display.Ds9Display.zoom","text":"Set display zoom factor relative to current zoom. :param int Scale: Scale factor for zoom, 0 \"to fit\" :return None:","title":"zoom()"}]}